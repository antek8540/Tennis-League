
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.*;

public class SecondLounchWindow extends JFrame implements ActionListener  {
    JFrame mainWindow = new JFrame();
    JButton viewLeagues = new JButton("View Leagues");
    JButton newLeague = new JButton ("Organize tournament for new League"); // button for organizing tounamnet to new League
    JFrame existingLeagues = new JFrame(); //here the leagues will be displayed
    JTabbedPane leagueTab = new JTabbedPane(); //tabs to select league which you want to view
   JTable [] jt; //
   Tournament t;
    private int x;
    LeagueQueue q = new LeagueQueue(10);
    public SecondLounchWindow(int noOfLeagues){
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Rectangle rect = ge.getMaximumWindowBounds();
        JComponent jcomp = (JComponent)mainWindow.getContentPane();
       jcomp.setLayout(new GridLayout(0,  1));;
        mainWindow.setVisible(true);
        mainWindow.setSize(600, 300);
        Font font = new Font("Arial",Font.BOLD,22);
        newLeague.setFont(font);
        viewLeagues.setFont(font);
        mainWindow.add(newLeague);
        newLeague.setLocation(10, 10);
        mainWindow.add(viewLeagues);
        viewLeagues.addActionListener(this);
        mainWindow.setDefaultCloseOperation(EXIT_ON_CLOSE);
        mainWindow.setLocationRelativeTo(null);
        x = noOfLeagues;
        
    }
    @Override
     public void actionPerformed(ActionEvent ae){
          int a = 1;
         for(int i=0;i<x;i++){
             try {
                // System.out.println(ReadFile.readFile("League"+a+".txt"));
                Player [] arr = ReadWriteFile.readFile("League"+a+".txt");
                League league = new League(arr);
               // System.out.println(league.toString());
             //  System.out.println("ADDING:"+q.add(new League(arr)));
                 //System.out.println(a);
                 q.add(league);
             } catch (IOException ex) {
                 Logger.getLogger(SecondLounchWindow.class.getName()).log(Level.SEVERE, null, ex);
             }
             a++;
         }
         JButton jb = (JButton)ae.getSource();
         
         if(ae.getActionCommand().equals("View Leagues")){
             System.out.println(x); //x równa się
             
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Rectangle rect = ge.getMaximumWindowBounds();
        JComponent jcomp = (JComponent)existingLeagues.getContentPane();
       jcomp.setLayout(new GridLayout(0,  1));
       existingLeagues.setSize(600, 300);
        existingLeagues.setVisible(true);
        existingLeagues.add(leagueTab);
        JPanel[] Panels= new JPanel [x];
        
        jt  = new JTable [x];
        int k =1;
             for(int i=0;i<x;i++){
                 Panels [i]=new JPanel(); //arr of JPannels created in order to create jTabs for proper no Of Leagues
             leagueTab.addTab("League"+" "+k,Panels[i]);
             k++;
                 jt[i] = new javax.swing.JTable();
             Panels[i].add(jt[i]);
              jt[i].setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},              
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Surname"
            }
        ));
            for(int l = 0; l<10;l++){
             //   System.out.println(q.getLeague(i).getPlayer(l).getName());
                jt[i].setValueAt(q.getLeague(i).getPlayer(l).getName(), l, 0);
              //  System.out.println(q.getLeague(i).getPlayer(l).getSurname());
                jt[i].setValueAt(q.getLeague(i).getPlayer(l).getSurname(), l, 1);
            }
             }
         }
           
         if(ae.getActionCommand().equals("Organize tournament for new League")){
             
                        Player [] tournamentWinners = new Player [x];
                           for(int i=0;i<x;i++){
                                t = new Tournament (q.getLeague(i));
                                TournamentGui.setGuiTournment(t);
                               
                           }
                                  
     }
  }
    
}

